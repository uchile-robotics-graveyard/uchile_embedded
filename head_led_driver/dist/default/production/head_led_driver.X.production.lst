

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jan 29 20:07:59 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  008C                     	;# 
    48  008E                     	;# 
    49  0092                     	;# 
    50  0098                     	;# 
    51  0099                     	;# 
    52  009A                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009F                     	;# 
    57  000B                     _INTCONbits	set	11
    58  001A                     _RCREG	set	26
    59  0019                     _TXREG	set	25
    60  00C4                     _CREN	set	196
    61  005F                     _GIE	set	95
    62  0030                     _RB0	set	48
    63  0033                     _RB3	set	51
    64  0034                     _RB4	set	52
    65  0035                     _RB5	set	53
    66  0036                     _RB6	set	54
    67  0037                     _RB7	set	55
    68  0065                     _RCIF	set	101
    69  00C7                     _SPEN	set	199
    70  0099                     _SPBRG	set	153
    71  0086                     _TRISB	set	134
    72  04C2                     _BRGH	set	1218
    73  04C4                     _SYNC	set	1220
    74  0431                     _TRISB1	set	1073
    75  0432                     _TRISB2	set	1074
    76  0434                     _TRISB4	set	1076
    77  0435                     _TRISB5	set	1077
    78  04C1                     _TRMT	set	1217
    79  04C5                     _TXEN	set	1221
    80                           
    81                           	psect	text0
    82  0000                     __ptext0:	
    83                           
    84                           ;psect for function ___aldiv
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  044A                     start_initialization:	
    89  044A                     __initialization:	
    90                           
    91                           ; Clear objects allocated to BANK0
    92  044A  1383               	bcf	3,7	;select IRP bank0
    93  044B  3020               	movlw	low __pbssBANK0
    94  044C  0084               	movwf	4
    95  044D  303D               	movlw	low (__pbssBANK0+29)
    96  044E  2451               	fcall	clear_ram0
    97  044F                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  044F                     __end_of__initialization:	
   101  044F  0183               	clrf	3
   102  0450  2E68               	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	bssBANK0
   105  0020                     __pbssBANK0:	
   106  0020                     _brillo:	
   107  0020                     	ds	6
   108  0026                     _espera:	
   109  0026                     	ds	6
   110  002C                     _refbrillo:	
   111  002C                     	ds	6
   112  0032                     _vel:	
   113  0032                     	ds	6
   114  0038                     _comando:	
   115  0038                     	ds	3
   116  003B                     _aux:	
   117  003B                     	ds	1
   118  003C                     _indiceComando:	
   119  003C                     	ds	1
   120                           
   121                           	psect	clrtext
   122  0451                     clear_ram0:	
   123                           ;	Called with FSR containing the base address, and
   124                           ;	W with the last address+1
   125                           
   126  0451  0064               	clrwdt	;clear the watchdog before getting into this loop
   127  0452                     clrloop0:	
   128  0452  0180               	clrf	0	;clear RAM location pointed to by FSR
   129  0453  0A84               	incf	4,f	;increment pointer
   130  0454  0604               	xorwf	4,w	;XOR with final address
   131  0455  1903               	btfsc	3,2	;have we reached the end yet?
   132  0456  3400               	retlw	0	;all done for this memory range, return
   133  0457  0604               	xorwf	4,w	;XOR again to restore value
   134  0458  2C52               	goto	clrloop0	;do the next byte
   135                           
   136                           	psect	cstackCOMMON
   137  0070                     __pcstackCOMMON:	
   138  0070                     ??_UART_Data_Ready:	
   139  0070                     ??_UART_Read:	
   140                           ; 0 bytes @ 0x0
   141                           
   142  0070                     ?_analizaComando:	
   143                           ; 0 bytes @ 0x0
   144                           
   145  0070                     ??_analizaComando:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0070                     ?_serial_isr:	
   149                           ; 0 bytes @ 0x0
   150                           
   151  0070                     ?_apagatodo:	
   152                           ; 0 bytes @ 0x0
   153                           
   154  0070                     ??_apagatodo:	
   155                           ; 0 bytes @ 0x0
   156                           
   157  0070                     ?_main:	
   158                           ; 0 bytes @ 0x0
   159                           
   160  0070                     ?_UART_Data_Ready:	
   161                           ; 0 bytes @ 0x0
   162                           
   163  0070                     ?_UART_Read:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?___aldiv:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ___aldiv@divisor:	
   170                           ; 4 bytes @ 0x0
   171                           
   172                           
   173                           ; 4 bytes @ 0x0
   174  0070                     	ds	1
   175  0071                     ??_serial_isr:	
   176                           
   177                           ; 0 bytes @ 0x1
   178  0071                     	ds	3
   179  0074                     ___aldiv@dividend:	
   180                           
   181                           ; 4 bytes @ 0x4
   182  0074                     	ds	4
   183  0078                     ??___aldiv:	
   184                           
   185                           ; 0 bytes @ 0x8
   186  0078                     	ds	1
   187  0079                     UART_Init@x:	
   188                           
   189                           ; 2 bytes @ 0x9
   190  0079                     	ds	2
   191  007B                     ??_main:	
   192                           
   193                           ; 0 bytes @ 0xB
   194  007B                     	ds	3
   195                           
   196                           	psect	cstackBANK0
   197  003D                     __pcstackBANK0:	
   198  003D                     ___aldiv@counter:	
   199                           
   200                           ; 1 bytes @ 0x0
   201  003D                     	ds	1
   202  003E                     ___aldiv@sign:	
   203                           
   204                           ; 1 bytes @ 0x1
   205  003E                     	ds	1
   206  003F                     ___aldiv@quotient:	
   207                           
   208                           ; 4 bytes @ 0x2
   209  003F                     	ds	4
   210  0043                     ?_UART_Init:	
   211  0043                     UART_Init@baudrate:	
   212                           ; 1 bytes @ 0x6
   213                           
   214                           
   215                           ; 4 bytes @ 0x6
   216  0043                     	ds	4
   217  0047                     ??_UART_Init:	
   218                           
   219                           ; 0 bytes @ 0xA
   220  0047                     	ds	12
   221  0053                     main@i:	
   222                           
   223                           ; 2 bytes @ 0x16
   224  0053                     	ds	2
   225                           
   226                           	psect	maintext
   227  0668                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 172 in file "led_driver.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  i               2   22[BANK0 ] int 
   238 ;; Return value:  Size  Location     Type
   239 ;;		None               void
   240 ;; Registers used:
   241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 17F/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   247 ;;      Params:         0       0       0       0
   248 ;;      Locals:         0       2       0       0
   249 ;;      Temps:          3       0       0       0
   250 ;;      Totals:         3       2       0       0
   251 ;;Total ram usage:        5 bytes
   252 ;; Hardware stack levels required when called:    2
   253 ;; This function calls:
   254 ;;		_UART_Init
   255 ;;		_serial_isr
   256 ;;		_apagatodo
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           
   263                           ;psect for function _main
   264  0668                     _main:	
   265                           
   266                           ;led_driver.c: 173: int i=0;
   267                           
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   270  0668  1283               	bcf	3,5	;RP0=0, select bank0
   271  0669  1303               	bcf	3,6	;RP1=0, select bank0
   272  066A  01D3               	clrf	main@i
   273  066B  01D4               	clrf	main@i+1
   274                           
   275                           ;led_driver.c: 174: for(i=0;i<5;++i)
   276  066C  01D3               	clrf	main@i
   277  066D  01D4               	clrf	main@i+1
   278  066E  0854               	movf	main@i+1,w
   279  066F  3A80               	xorlw	128
   280  0670  00FF               	movwf	127
   281  0671  3080               	movlw	128
   282  0672  027F               	subwf	127,w
   283  0673  1D03               	skipz
   284  0674  2E77               	goto	u775
   285  0675  3005               	movlw	5
   286  0676  0253               	subwf	main@i,w
   287  0677                     u775:	
   288  0677  1803               	btfsc	3,0
   289  0678  2E9D               	goto	l1165
   290  0679                     l1159:	
   291                           
   292                           ;led_driver.c: 175: {
   293                           ;led_driver.c: 176: vel[i]=0;
   294  0679  1283               	bcf	3,5	;RP0=0, select bank0
   295  067A  1303               	bcf	3,6	;RP1=0, select bank0
   296  067B  0853               	movf	main@i,w
   297  067C  3E32               	addlw	_vel& (0+255)
   298  067D  0084               	movwf	4
   299  067E  1383               	bcf	3,7	;select IRP bank0
   300  067F  0180               	clrf	0
   301                           
   302                           ;led_driver.c: 177: brillo[i]=0;
   303  0680  0853               	movf	main@i,w
   304  0681  3E20               	addlw	_brillo& (0+255)
   305  0682  0084               	movwf	4
   306  0683  0180               	clrf	0
   307                           
   308                           ;led_driver.c: 178: refbrillo[i]=0;
   309  0684  0853               	movf	main@i,w
   310  0685  3E2C               	addlw	_refbrillo& (0+255)
   311  0686  0084               	movwf	4
   312  0687  0180               	clrf	0
   313                           
   314                           ;led_driver.c: 179: espera[i]=0;
   315  0688  0853               	movf	main@i,w
   316  0689  3E26               	addlw	_espera& (0+255)
   317  068A  0084               	movwf	4
   318  068B  0180               	clrf	0
   319  068C  3001               	movlw	1
   320  068D  07D3               	addwf	main@i,f
   321  068E  1803               	skipnc
   322  068F  0AD4               	incf	main@i+1,f
   323  0690  3000               	movlw	0
   324  0691  07D4               	addwf	main@i+1,f
   325  0692  0854               	movf	main@i+1,w
   326  0693  3A80               	xorlw	128
   327  0694  00FF               	movwf	127
   328  0695  3080               	movlw	128
   329  0696  027F               	subwf	127,w
   330  0697  1D03               	skipz
   331  0698  2E9B               	goto	u785
   332  0699  3005               	movlw	5
   333  069A  0253               	subwf	main@i,w
   334  069B                     u785:	
   335  069B  1C03               	skipc
   336  069C  2E79               	goto	l1159
   337  069D                     l1165:	
   338                           
   339                           ;led_driver.c: 180: }
   340                           ;led_driver.c: 181: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   341  069D  3006               	movlw	6
   342  069E  00FD               	movwf	??_main+2
   343  069F  3013               	movlw	19
   344  06A0  00FC               	movwf	??_main+1
   345  06A1  30B1               	movlw	177
   346  06A2  00FB               	movwf	??_main
   347  06A3                     u997:	
   348  06A3  0BFB               	decfsz	??_main,f
   349  06A4  2EA3               	goto	u997
   350  06A5  0BFC               	decfsz	??_main+1,f
   351  06A6  2EA3               	goto	u997
   352  06A7  0BFD               	decfsz	??_main+2,f
   353  06A8  2EA3               	goto	u997
   354  06A9  2EAA               	nop2
   355                           
   356                           ;led_driver.c: 182: apagatodo();
   357  06AA  2459               	fcall	_apagatodo
   358                           
   359                           ;led_driver.c: 183: RB0=1;
   360  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   361  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   362  06AD  1406               	bsf	6,0	;volatile
   363                           
   364                           ;led_driver.c: 184: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   365  06AE  3006               	movlw	6
   366  06AF  00FD               	movwf	??_main+2
   367  06B0  3013               	movlw	19
   368  06B1  00FC               	movwf	??_main+1
   369  06B2  30B1               	movlw	177
   370  06B3  00FB               	movwf	??_main
   371  06B4                     u1007:	
   372  06B4  0BFB               	decfsz	??_main,f
   373  06B5  2EB4               	goto	u1007
   374  06B6  0BFC               	decfsz	??_main+1,f
   375  06B7  2EB4               	goto	u1007
   376  06B8  0BFD               	decfsz	??_main+2,f
   377  06B9  2EB4               	goto	u1007
   378  06BA  2EBB               	nop2
   379                           
   380                           ;led_driver.c: 185: apagatodo();
   381  06BB  2459               	fcall	_apagatodo
   382                           
   383                           ;led_driver.c: 186: RB3=1;
   384  06BC  1283               	bcf	3,5	;RP0=0, select bank0
   385  06BD  1303               	bcf	3,6	;RP1=0, select bank0
   386  06BE  1586               	bsf	6,3	;volatile
   387                           
   388                           ;led_driver.c: 187: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   389  06BF  3006               	movlw	6
   390  06C0  00FD               	movwf	??_main+2
   391  06C1  3013               	movlw	19
   392  06C2  00FC               	movwf	??_main+1
   393  06C3  30B1               	movlw	177
   394  06C4  00FB               	movwf	??_main
   395  06C5                     u1017:	
   396  06C5  0BFB               	decfsz	??_main,f
   397  06C6  2EC5               	goto	u1017
   398  06C7  0BFC               	decfsz	??_main+1,f
   399  06C8  2EC5               	goto	u1017
   400  06C9  0BFD               	decfsz	??_main+2,f
   401  06CA  2EC5               	goto	u1017
   402  06CB  2ECC               	nop2
   403                           
   404                           ;led_driver.c: 188: apagatodo();
   405  06CC  2459               	fcall	_apagatodo
   406                           
   407                           ;led_driver.c: 189: RB4=1;
   408  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   409  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   410  06CF  1606               	bsf	6,4	;volatile
   411                           
   412                           ;led_driver.c: 190: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   413  06D0  3006               	movlw	6
   414  06D1  00FD               	movwf	??_main+2
   415  06D2  3013               	movlw	19
   416  06D3  00FC               	movwf	??_main+1
   417  06D4  30B1               	movlw	177
   418  06D5  00FB               	movwf	??_main
   419  06D6                     u1027:	
   420  06D6  0BFB               	decfsz	??_main,f
   421  06D7  2ED6               	goto	u1027
   422  06D8  0BFC               	decfsz	??_main+1,f
   423  06D9  2ED6               	goto	u1027
   424  06DA  0BFD               	decfsz	??_main+2,f
   425  06DB  2ED6               	goto	u1027
   426  06DC  2EDD               	nop2
   427                           
   428                           ;led_driver.c: 191: apagatodo();
   429  06DD  2459               	fcall	_apagatodo
   430                           
   431                           ;led_driver.c: 192: RB5=1;
   432  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   433  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   434  06E0  1686               	bsf	6,5	;volatile
   435                           
   436                           ;led_driver.c: 193: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   437  06E1  3006               	movlw	6
   438  06E2  00FD               	movwf	??_main+2
   439  06E3  3013               	movlw	19
   440  06E4  00FC               	movwf	??_main+1
   441  06E5  30B1               	movlw	177
   442  06E6  00FB               	movwf	??_main
   443  06E7                     u1037:	
   444  06E7  0BFB               	decfsz	??_main,f
   445  06E8  2EE7               	goto	u1037
   446  06E9  0BFC               	decfsz	??_main+1,f
   447  06EA  2EE7               	goto	u1037
   448  06EB  0BFD               	decfsz	??_main+2,f
   449  06EC  2EE7               	goto	u1037
   450  06ED  2EEE               	nop2
   451                           
   452                           ;led_driver.c: 194: apagatodo();
   453  06EE  2459               	fcall	_apagatodo
   454                           
   455                           ;led_driver.c: 195: RB6=1;
   456  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   457  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   458  06F1  1706               	bsf	6,6	;volatile
   459                           
   460                           ;led_driver.c: 196: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   461  06F2  3006               	movlw	6
   462  06F3  00FD               	movwf	??_main+2
   463  06F4  3013               	movlw	19
   464  06F5  00FC               	movwf	??_main+1
   465  06F6  30B1               	movlw	177
   466  06F7  00FB               	movwf	??_main
   467  06F8                     u1047:	
   468  06F8  0BFB               	decfsz	??_main,f
   469  06F9  2EF8               	goto	u1047
   470  06FA  0BFC               	decfsz	??_main+1,f
   471  06FB  2EF8               	goto	u1047
   472  06FC  0BFD               	decfsz	??_main+2,f
   473  06FD  2EF8               	goto	u1047
   474  06FE  2EFF               	nop2
   475                           
   476                           ;led_driver.c: 197: apagatodo();
   477  06FF  2459               	fcall	_apagatodo
   478                           
   479                           ;led_driver.c: 198: RB7=1;
   480  0700  1283               	bcf	3,5	;RP0=0, select bank0
   481  0701  1303               	bcf	3,6	;RP1=0, select bank0
   482  0702  1786               	bsf	6,7	;volatile
   483                           
   484                           ;led_driver.c: 199: _delay((unsigned long)((1000)*((4000000L)/4000.0)));
   485  0703  3006               	movlw	6
   486  0704  00FD               	movwf	??_main+2
   487  0705  3013               	movlw	19
   488  0706  00FC               	movwf	??_main+1
   489  0707  30B1               	movlw	177
   490  0708  00FB               	movwf	??_main
   491  0709                     u1057:	
   492  0709  0BFB               	decfsz	??_main,f
   493  070A  2F09               	goto	u1057
   494  070B  0BFC               	decfsz	??_main+1,f
   495  070C  2F09               	goto	u1057
   496  070D  0BFD               	decfsz	??_main+2,f
   497  070E  2F09               	goto	u1057
   498  070F  2F10               	nop2
   499                           
   500                           ;led_driver.c: 200: apagatodo();
   501  0710  2459               	fcall	_apagatodo
   502                           
   503                           ;led_driver.c: 201: _delay((unsigned long)((2000)*((4000000L)/4000.0)));
   504  0711  300B               	movlw	11
   505  0712  00FD               	movwf	??_main+2
   506  0713  3026               	movlw	38
   507  0714  00FC               	movwf	??_main+1
   508  0715  3066               	movlw	102
   509  0716  00FB               	movwf	??_main
   510  0717                     u1067:	
   511  0717  0BFB               	decfsz	??_main,f
   512  0718  2F17               	goto	u1067
   513  0719  0BFC               	decfsz	??_main+1,f
   514  071A  2F17               	goto	u1067
   515  071B  0BFD               	decfsz	??_main+2,f
   516  071C  2F17               	goto	u1067
   517  071D  2F1E               	nop2
   518                           
   519                           ;led_driver.c: 202: (GIE = 1);
   520  071E  178B               	bsf	11,7	;volatile
   521                           
   522                           ;led_driver.c: 205: INTCONbits.GIE = 1;
   523  071F  178B               	bsf	11,7	;volatile
   524                           
   525                           ;led_driver.c: 206: UART_Init(9600L);
   526  0720  3000               	movlw	0
   527  0721  1283               	bcf	3,5	;RP0=0, select bank0
   528  0722  1303               	bcf	3,6	;RP1=0, select bank0
   529  0723  00C6               	movwf	?_UART_Init+3
   530  0724  3000               	movlw	0
   531  0725  00C5               	movwf	?_UART_Init+2
   532  0726  3025               	movlw	37
   533  0727  00C4               	movwf	?_UART_Init+1
   534  0728  3080               	movlw	128
   535  0729  00C3               	movwf	?_UART_Init
   536  072A  2584               	fcall	_UART_Init
   537  072B                     l1205:	
   538                           ;led_driver.c: 209: while(1)
   539                           
   540                           
   541                           ;led_driver.c: 210: {
   542                           ;led_driver.c: 211: serial_isr();
   543  072B  2462               	fcall	_serial_isr
   544                           
   545                           ;led_driver.c: 212: if(brillo[0]!=0)
   546  072C  1283               	bcf	3,5	;RP0=0, select bank0
   547  072D  1303               	bcf	3,6	;RP1=0, select bank0
   548  072E  0820               	movf	_brillo,w
   549  072F  1D03               	skipz
   550                           
   551                           ;led_driver.c: 213: RB0=1;
   552  0730  1406               	bsf	6,0	;volatile
   553                           
   554                           ;led_driver.c: 214: if(brillo[1]!=0)
   555  0731  0821               	movf	_brillo+1,w
   556  0732  1D03               	skipz
   557                           
   558                           ;led_driver.c: 215: RB4=1;
   559  0733  1606               	bsf	6,4	;volatile
   560                           
   561                           ;led_driver.c: 216: if(brillo[2]!=0)
   562  0734  0822               	movf	_brillo+2,w
   563  0735  1D03               	skipz
   564                           
   565                           ;led_driver.c: 217: RB4=1;
   566  0736  1606               	bsf	6,4	;volatile
   567                           
   568                           ;led_driver.c: 218: if(brillo[3]!=0)
   569  0737  0823               	movf	_brillo+3,w
   570  0738  1D03               	skipz
   571                           
   572                           ;led_driver.c: 219: RB5=1;
   573  0739  1686               	bsf	6,5	;volatile
   574                           
   575                           ;led_driver.c: 220: if(brillo[4]!=0)
   576  073A  0824               	movf	_brillo+4,w
   577  073B  1D03               	skipz
   578                           
   579                           ;led_driver.c: 221: RB6=1;
   580  073C  1706               	bsf	6,6	;volatile
   581                           
   582                           ;led_driver.c: 222: if(brillo[5]!=0)
   583  073D  0825               	movf	_brillo+5,w
   584  073E  1D03               	skipz
   585                           
   586                           ;led_driver.c: 223: RB7=1;
   587  073F  1786               	bsf	6,7	;volatile
   588                           
   589                           ;led_driver.c: 225: for(i=0;i<255;++i)
   590  0740  01D3               	clrf	main@i
   591  0741  01D4               	clrf	main@i+1
   592  0742  0854               	movf	main@i+1,w
   593  0743  3A80               	xorlw	128
   594  0744  00FF               	movwf	127
   595  0745  3080               	movlw	128
   596  0746  027F               	subwf	127,w
   597  0747  1D03               	skipz
   598  0748  2F4B               	goto	u855
   599  0749  30FF               	movlw	255
   600  074A  0253               	subwf	main@i,w
   601  074B                     u855:	
   602  074B  1803               	btfsc	3,0
   603  074C  2FA5               	goto	l1265
   604  074D                     l1237:	
   605                           
   606                           ;led_driver.c: 226: {
   607                           ;led_driver.c: 227: if(brillo[0]==i)
   608  074D  1283               	bcf	3,5	;RP0=0, select bank0
   609  074E  1303               	bcf	3,6	;RP1=0, select bank0
   610  074F  0820               	movf	_brillo,w
   611  0750  00FB               	movwf	??_main
   612  0751  01FC               	clrf	??_main+1
   613  0752  0854               	movf	main@i+1,w
   614  0753  067C               	xorwf	??_main+1,w
   615  0754  1D03               	skipz
   616  0755  2F58               	goto	u865
   617  0756  0853               	movf	main@i,w
   618  0757  067B               	xorwf	??_main,w
   619  0758                     u865:	
   620  0758  1903               	btfsc	3,2
   621                           
   622                           ;led_driver.c: 228: RB0=0;
   623  0759  1006               	bcf	6,0	;volatile
   624                           
   625                           ;led_driver.c: 229: if(brillo[1]==i)
   626  075A  0821               	movf	_brillo+1,w
   627  075B  00FB               	movwf	??_main
   628  075C  01FC               	clrf	??_main+1
   629  075D  0854               	movf	main@i+1,w
   630  075E  067C               	xorwf	??_main+1,w
   631  075F  1D03               	skipz
   632  0760  2F63               	goto	u875
   633  0761  0853               	movf	main@i,w
   634  0762  067B               	xorwf	??_main,w
   635  0763                     u875:	
   636  0763  1903               	btfsc	3,2
   637                           
   638                           ;led_driver.c: 230: RB3=0;
   639  0764  1186               	bcf	6,3	;volatile
   640                           
   641                           ;led_driver.c: 231: if(brillo[2]==i)
   642  0765  0822               	movf	_brillo+2,w
   643  0766  00FB               	movwf	??_main
   644  0767  01FC               	clrf	??_main+1
   645  0768  0854               	movf	main@i+1,w
   646  0769  067C               	xorwf	??_main+1,w
   647  076A  1D03               	skipz
   648  076B  2F6E               	goto	u885
   649  076C  0853               	movf	main@i,w
   650  076D  067B               	xorwf	??_main,w
   651  076E                     u885:	
   652  076E  1903               	btfsc	3,2
   653                           
   654                           ;led_driver.c: 232: RB4=0;
   655  076F  1206               	bcf	6,4	;volatile
   656                           
   657                           ;led_driver.c: 233: if(brillo[3]==i)
   658  0770  0823               	movf	_brillo+3,w
   659  0771  00FB               	movwf	??_main
   660  0772  01FC               	clrf	??_main+1
   661  0773  0854               	movf	main@i+1,w
   662  0774  067C               	xorwf	??_main+1,w
   663  0775  1D03               	skipz
   664  0776  2F79               	goto	u895
   665  0777  0853               	movf	main@i,w
   666  0778  067B               	xorwf	??_main,w
   667  0779                     u895:	
   668  0779  1903               	btfsc	3,2
   669                           
   670                           ;led_driver.c: 234: RB5=0;
   671  077A  1286               	bcf	6,5	;volatile
   672                           
   673                           ;led_driver.c: 235: if(brillo[4]==i)
   674  077B  0824               	movf	_brillo+4,w
   675  077C  00FB               	movwf	??_main
   676  077D  01FC               	clrf	??_main+1
   677  077E  0854               	movf	main@i+1,w
   678  077F  067C               	xorwf	??_main+1,w
   679  0780  1D03               	skipz
   680  0781  2F84               	goto	u905
   681  0782  0853               	movf	main@i,w
   682  0783  067B               	xorwf	??_main,w
   683  0784                     u905:	
   684  0784  1903               	btfsc	3,2
   685                           
   686                           ;led_driver.c: 236: RB6=0;
   687  0785  1306               	bcf	6,6	;volatile
   688                           
   689                           ;led_driver.c: 237: if(brillo[5]==i)
   690  0786  0825               	movf	_brillo+5,w
   691  0787  00FB               	movwf	??_main
   692  0788  01FC               	clrf	??_main+1
   693  0789  0854               	movf	main@i+1,w
   694  078A  067C               	xorwf	??_main+1,w
   695  078B  1D03               	skipz
   696  078C  2F8F               	goto	u915
   697  078D  0853               	movf	main@i,w
   698  078E  067B               	xorwf	??_main,w
   699  078F                     u915:	
   700  078F  1903               	btfsc	3,2
   701                           
   702                           ;led_driver.c: 238: RB7=0;
   703  0790  1386               	bcf	6,7	;volatile
   704                           
   705                           ;led_driver.c: 239: _delay((unsigned long)((1)*((4000000L)/4000000.0)));
   706  0791  0000               	nop
   707  0792  3001               	movlw	1
   708  0793  1283               	bcf	3,5	;RP0=0, select bank0
   709  0794  1303               	bcf	3,6	;RP1=0, select bank0
   710  0795  07D3               	addwf	main@i,f
   711  0796  1803               	skipnc
   712  0797  0AD4               	incf	main@i+1,f
   713  0798  3000               	movlw	0
   714  0799  07D4               	addwf	main@i+1,f
   715  079A  0854               	movf	main@i+1,w
   716  079B  3A80               	xorlw	128
   717  079C  00FF               	movwf	127
   718  079D  3080               	movlw	128
   719  079E  027F               	subwf	127,w
   720  079F  1D03               	skipz
   721  07A0  2FA3               	goto	u925
   722  07A1  30FF               	movlw	255
   723  07A2  0253               	subwf	main@i,w
   724  07A3                     u925:	
   725  07A3  1C03               	skipc
   726  07A4  2F4D               	goto	l1237
   727  07A5                     l1265:	
   728                           
   729                           ;led_driver.c: 240: }
   730                           ;led_driver.c: 241: for(i=0;i<6;++i)
   731  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   732  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   733  07A7  01D3               	clrf	main@i
   734  07A8  01D4               	clrf	main@i+1
   735  07A9                     L1:	
   736  07A9  0854               	movf	main@i+1,w
   737  07AA  3A80               	xorlw	128
   738  07AB  00FF               	movwf	127
   739  07AC  3080               	movlw	128
   740  07AD  027F               	subwf	127,w
   741  07AE  1D03               	skipz
   742  07AF  2FB2               	goto	u935
   743  07B0  3006               	movlw	6
   744  07B1  0253               	subwf	main@i,w
   745  07B2                     u935:	
   746  07B2  1803               	btfsc	3,0
   747  07B3  2F2B               	goto	l1205
   748                           
   749                           ;led_driver.c: 242: {
   750                           ;led_driver.c: 243: if(espera[i]!=0)
   751  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   752  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   753  07B6  0853               	movf	main@i,w
   754  07B7  3E26               	addlw	_espera& (0+255)
   755  07B8  0084               	movwf	4
   756  07B9  1383               	bcf	3,7	;select IRP bank0
   757  07BA  0880               	movf	0,f
   758  07BB  1903               	skipnz
   759  07BC  2FC2               	goto	l153
   760                           
   761                           ;led_driver.c: 244: espera[i]--;
   762  07BD  0853               	movf	main@i,w
   763  07BE  3E26               	addlw	_espera& (0+255)
   764  07BF  0084               	movwf	4
   765  07C0  3001               	movlw	1
   766  07C1  0280               	subwf	0,f
   767  07C2                     l153:	
   768                           
   769                           ;led_driver.c: 245: if(brillo[i]!=refbrillo[i])
   770  07C2  0853               	movf	main@i,w
   771  07C3  3E2C               	addlw	_refbrillo& (0+255)
   772  07C4  0084               	movwf	4
   773  07C5  0800               	movf	0,w
   774  07C6  00FB               	movwf	??_main
   775  07C7  0853               	movf	main@i,w
   776  07C8  3E20               	addlw	_brillo& (0+255)
   777  07C9  0084               	movwf	4
   778  07CA  0800               	movf	0,w
   779  07CB  067B               	xorwf	??_main,w
   780  07CC  1903               	skipnz
   781  07CD  2FF9               	goto	l1283
   782                           
   783                           ;led_driver.c: 246: {
   784                           ;led_driver.c: 247: if(espera[i]==0)
   785  07CE  0853               	movf	main@i,w
   786  07CF  3E26               	addlw	_espera& (0+255)
   787  07D0  0084               	movwf	4
   788  07D1  0880               	movf	0,f
   789  07D2  1D03               	skipz
   790  07D3  2FF9               	goto	l1283
   791                           
   792                           ;led_driver.c: 248: {
   793                           ;led_driver.c: 249: espera[i]=vel[i];
   794  07D4  0853               	movf	main@i,w
   795  07D5  3E32               	addlw	_vel& (0+255)
   796  07D6  0084               	movwf	4
   797  07D7  0800               	movf	0,w
   798  07D8  00FB               	movwf	??_main
   799  07D9  0853               	movf	main@i,w
   800  07DA  3E26               	addlw	_espera& (0+255)
   801  07DB  0084               	movwf	4
   802  07DC  087B               	movf	??_main,w
   803  07DD  0080               	movwf	0
   804                           
   805                           ;led_driver.c: 250: if(brillo[i]>refbrillo[i])
   806  07DE  0853               	movf	main@i,w
   807  07DF  3E20               	addlw	_brillo& (0+255)
   808  07E0  0084               	movwf	4
   809  07E1  0800               	movf	0,w
   810  07E2  00FB               	movwf	??_main
   811  07E3  0853               	movf	main@i,w
   812  07E4  3E2C               	addlw	_refbrillo& (0+255)
   813  07E5  0084               	movwf	4
   814  07E6  0800               	movf	0,w
   815  07E7  00FC               	movwf	??_main+1
   816  07E8  087B               	movf	??_main,w
   817  07E9  027C               	subwf	??_main+1,w
   818  07EA  1803               	skipnc
   819  07EB  2FF2               	goto	l1281
   820                           
   821                           ;led_driver.c: 251: {
   822                           ;led_driver.c: 252: --brillo[i];
   823  07EC  0853               	movf	main@i,w
   824  07ED  3E20               	addlw	_brillo& (0+255)
   825  07EE  0084               	movwf	4
   826  07EF  3001               	movlw	1
   827  07F0  0280               	subwf	0,f
   828                           
   829                           ;led_driver.c: 253: }
   830  07F1  2FF9               	goto	l1283
   831  07F2                     l1281:	
   832                           
   833                           ;led_driver.c: 254: else
   834                           ;led_driver.c: 255: {
   835                           ;led_driver.c: 256: ++brillo[i];
   836  07F2  3001               	movlw	1
   837  07F3  00FB               	movwf	??_main
   838  07F4  0853               	movf	main@i,w
   839  07F5  3E20               	addlw	_brillo& (0+255)
   840  07F6  0084               	movwf	4
   841  07F7  087B               	movf	??_main,w
   842  07F8  0780               	addwf	0,f
   843  07F9                     l1283:	
   844  07F9  3001               	movlw	1
   845  07FA  07D3               	addwf	main@i,f
   846  07FB  1803               	skipnc
   847  07FC  0AD4               	incf	main@i+1,f
   848  07FD  3000               	movlw	0
   849  07FE  07D4               	addwf	main@i+1,f
   850  07FF  2FA9               	goto	L1
   851  0800                     __end_of_main:	
   852                           
   853                           	psect	text1
   854  0459                     __ptext1:	
   855 ;; *************** function _apagatodo *****************
   856 ;; Defined at:
   857 ;;		line 150 in file "led_driver.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		None
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   871 ;;      Params:         0       0       0       0
   872 ;;      Locals:         0       0       0       0
   873 ;;      Temps:          0       0       0       0
   874 ;;      Totals:         0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _apagatodo
   886  0459                     _apagatodo:	
   887                           
   888                           ;led_driver.c: 151: RB0=0;
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _apagatodo: []
   892  0459  1283               	bcf	3,5	;RP0=0, select bank0
   893  045A  1303               	bcf	3,6	;RP1=0, select bank0
   894  045B  1006               	bcf	6,0	;volatile
   895                           
   896                           ;led_driver.c: 152: RB3=0;
   897  045C  1186               	bcf	6,3	;volatile
   898                           
   899                           ;led_driver.c: 153: RB4=0;
   900  045D  1206               	bcf	6,4	;volatile
   901                           
   902                           ;led_driver.c: 154: RB5=0;
   903  045E  1286               	bcf	6,5	;volatile
   904                           
   905                           ;led_driver.c: 155: RB6=0;
   906  045F  1306               	bcf	6,6	;volatile
   907                           
   908                           ;led_driver.c: 156: RB7=0;
   909  0460  1386               	bcf	6,7	;volatile
   910  0461  0008               	return
   911  0462                     __end_of_apagatodo:	
   912                           
   913                           	psect	text2
   914  0462                     __ptext2:	
   915 ;; *************** function _serial_isr *****************
   916 ;; Defined at:
   917 ;;		line 119 in file "led_driver.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;		None               void
   924 ;; Registers used:
   925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   931 ;;      Params:         0       0       0       0
   932 ;;      Locals:         0       0       0       0
   933 ;;      Temps:          1       0       0       0
   934 ;;      Totals:         1       0       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    1
   938 ;; This function calls:
   939 ;;		_UART_Data_Ready
   940 ;;		_UART_Read
   941 ;;		_analizaComando
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _serial_isr
   949  0462                     _serial_isr:	
   950                           
   951                           ;led_driver.c: 120: if(UART_Data_Ready())
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _serial_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   955  0462  243E               	fcall	_UART_Data_Ready
   956  0463  3A00               	xorlw	0
   957  0464  1903               	skipnz
   958  0465  0008               	return
   959                           
   960                           ;led_driver.c: 121: {
   961                           ;led_driver.c: 122: aux=UART_Read();
   962  0466  2444               	fcall	_UART_Read
   963  0467  00F1               	movwf	??_serial_isr
   964  0468  0871               	movf	??_serial_isr,w
   965  0469  1283               	bcf	3,5	;RP0=0, select bank0
   966  046A  1303               	bcf	3,6	;RP1=0, select bank0
   967  046B  00BB               	movwf	_aux
   968                           
   969                           ;led_driver.c: 123: if(aux==255)
   970  046C  083B               	movf	_aux,w
   971  046D  3AFF               	xorlw	255
   972  046E  1D03               	skipz
   973  046F  2C77               	goto	l1137
   974                           
   975                           ;led_driver.c: 124: {
   976                           ;led_driver.c: 125: comando[0]=aux;
   977  0470  083B               	movf	_aux,w
   978  0471  00F1               	movwf	??_serial_isr
   979  0472  0871               	movf	??_serial_isr,w
   980  0473  00B8               	movwf	_comando
   981                           
   982                           ;led_driver.c: 126: indiceComando=1;
   983  0474  01BC               	clrf	_indiceComando
   984  0475  0ABC               	incf	_indiceComando,f
   985                           
   986                           ;led_driver.c: 128: }
   987                           
   988                           ;led_driver.c: 127: return;
   989  0476  0008               	return
   990  0477                     l1137:	
   991                           
   992                           ;led_driver.c: 129: else if(indiceComando==1)
   993  0477  083C               	movf	_indiceComando,w
   994  0478  3A01               	xorlw	1
   995  0479  1D03               	skipz
   996  047A  2C84               	goto	l1145
   997                           
   998                           ;led_driver.c: 130: {
   999                           ;led_driver.c: 131: comando[1]=aux;
  1000  047B  083B               	movf	_aux,w
  1001  047C  00F1               	movwf	??_serial_isr
  1002  047D  0871               	movf	??_serial_isr,w
  1003  047E  00B9               	movwf	_comando+1
  1004                           
  1005                           ;led_driver.c: 132: indiceComando=2;
  1006  047F  3002               	movlw	2
  1007  0480  00F1               	movwf	??_serial_isr
  1008  0481  0871               	movf	??_serial_isr,w
  1009  0482  00BC               	movwf	_indiceComando
  1010                           
  1011                           ;led_driver.c: 134: }
  1012                           
  1013                           ;led_driver.c: 133: return;
  1014  0483  0008               	return
  1015  0484                     l1145:	
  1016                           
  1017                           ;led_driver.c: 135: else if(indiceComando==2)
  1018  0484  083C               	movf	_indiceComando,w
  1019  0485  3A02               	xorlw	2
  1020  0486  1D03               	skipz
  1021  0487  0008               	return
  1022                           
  1023                           ;led_driver.c: 136: {
  1024                           ;led_driver.c: 137: comando[2]=aux;
  1025  0488  083B               	movf	_aux,w
  1026  0489  00F1               	movwf	??_serial_isr
  1027  048A  0871               	movf	??_serial_isr,w
  1028  048B  00BA               	movwf	_comando+2
  1029                           
  1030                           ;led_driver.c: 138: indiceComando=3;
  1031  048C  3003               	movlw	3
  1032  048D  00F1               	movwf	??_serial_isr
  1033  048E  0871               	movf	??_serial_isr,w
  1034  048F  00BC               	movwf	_indiceComando
  1035                           
  1036                           ;led_driver.c: 139: analizaComando();
  1037  0490  2492               	fcall	_analizaComando
  1038                           
  1039                           ;led_driver.c: 140: return;
  1040  0491  0008               	return
  1041  0492                     __end_of_serial_isr:	
  1042                           ;led_driver.c: 141: }
  1043                           ;led_driver.c: 142: }
  1044                           ;led_driver.c: 143: return;
  1045                           
  1046                           
  1047                           	psect	text3
  1048  0492                     __ptext3:	
  1049 ;; *************** function _analizaComando *****************
  1050 ;; Defined at:
  1051 ;;		line 45 in file "led_driver.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;		None               void
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1065 ;;      Params:         0       0       0       0
  1066 ;;      Locals:         0       0       0       0
  1067 ;;      Temps:          1       0       0       0
  1068 ;;      Totals:         1       0       0       0
  1069 ;;Total ram usage:        1 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_serial_isr
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _analizaComando
  1080  0492                     _analizaComando:	
  1081                           
  1082                           ;led_driver.c: 46: switch(comando[1])
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _analizaComando: [wreg-fsr0h+status,2+status,0]
  1086  0492  2CE4               	goto	l1035
  1087  0493                     l1007:	
  1088                           ;led_driver.c: 47: {
  1089                           ;led_driver.c: 48: case 100:
  1090                           
  1091                           
  1092                           ;led_driver.c: 49: refbrillo[0]=comando[2];
  1093  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0495  083A               	movf	_comando+2,w
  1096  0496  00F0               	movwf	??_analizaComando
  1097  0497  0870               	movf	??_analizaComando,w
  1098  0498  00AC               	movwf	_refbrillo
  1099                           
  1100                           ;led_driver.c: 50: break;
  1101  0499  0008               	return
  1102  049A                     l1009:	
  1103                           ;led_driver.c: 51: case 101:
  1104                           
  1105                           
  1106                           ;led_driver.c: 52: refbrillo[1]=comando[2];
  1107  049A  083A               	movf	_comando+2,w
  1108  049B  00F0               	movwf	??_analizaComando
  1109  049C  0870               	movf	??_analizaComando,w
  1110  049D  00AD               	movwf	_refbrillo+1
  1111                           
  1112                           ;led_driver.c: 53: break;
  1113  049E  0008               	return
  1114  049F                     l1011:	
  1115                           ;led_driver.c: 54: case 102:
  1116                           
  1117                           
  1118                           ;led_driver.c: 55: refbrillo[2]=comando[2];
  1119  049F  083A               	movf	_comando+2,w
  1120  04A0  00F0               	movwf	??_analizaComando
  1121  04A1  0870               	movf	??_analizaComando,w
  1122  04A2  00AE               	movwf	_refbrillo+2
  1123                           
  1124                           ;led_driver.c: 56: break;
  1125  04A3  0008               	return
  1126  04A4                     l1013:	
  1127                           ;led_driver.c: 57: case 103:
  1128                           
  1129                           
  1130                           ;led_driver.c: 58: refbrillo[3]=comando[2];
  1131  04A4  083A               	movf	_comando+2,w
  1132  04A5  00F0               	movwf	??_analizaComando
  1133  04A6  0870               	movf	??_analizaComando,w
  1134  04A7  00AF               	movwf	_refbrillo+3
  1135                           
  1136                           ;led_driver.c: 59: break;
  1137  04A8  0008               	return
  1138  04A9                     l1015:	
  1139                           ;led_driver.c: 60: case 104:
  1140                           
  1141                           
  1142                           ;led_driver.c: 61: refbrillo[3]=comando[2];
  1143  04A9  083A               	movf	_comando+2,w
  1144  04AA  00F0               	movwf	??_analizaComando
  1145  04AB  0870               	movf	??_analizaComando,w
  1146  04AC  00AF               	movwf	_refbrillo+3
  1147                           
  1148                           ;led_driver.c: 62: break;
  1149  04AD  0008               	return
  1150  04AE                     l1017:	
  1151                           ;led_driver.c: 63: case 105:
  1152                           
  1153                           
  1154                           ;led_driver.c: 64: refbrillo[5]=comando[2];
  1155  04AE  083A               	movf	_comando+2,w
  1156  04AF  00F0               	movwf	??_analizaComando
  1157  04B0  0870               	movf	??_analizaComando,w
  1158  04B1  00B1               	movwf	_refbrillo+5
  1159                           
  1160                           ;led_driver.c: 65: break;
  1161  04B2  0008               	return
  1162  04B3                     l1019:	
  1163                           ;led_driver.c: 67: case 110:
  1164                           
  1165                           
  1166                           ;led_driver.c: 68: vel[0]=comando[2];
  1167  04B3  083A               	movf	_comando+2,w
  1168  04B4  00F0               	movwf	??_analizaComando
  1169  04B5  0870               	movf	??_analizaComando,w
  1170  04B6  00B2               	movwf	_vel
  1171                           
  1172                           ;led_driver.c: 69: break;
  1173  04B7  0008               	return
  1174  04B8                     l1021:	
  1175                           ;led_driver.c: 70: case 111:
  1176                           
  1177                           
  1178                           ;led_driver.c: 71: vel[1]=comando[2];
  1179  04B8  083A               	movf	_comando+2,w
  1180  04B9  00F0               	movwf	??_analizaComando
  1181  04BA  0870               	movf	??_analizaComando,w
  1182  04BB  00B3               	movwf	_vel+1
  1183                           
  1184                           ;led_driver.c: 72: break;
  1185  04BC  0008               	return
  1186  04BD                     l1023:	
  1187                           ;led_driver.c: 73: case 112:
  1188                           
  1189                           
  1190                           ;led_driver.c: 74: vel[2]=comando[2];
  1191  04BD  083A               	movf	_comando+2,w
  1192  04BE  00F0               	movwf	??_analizaComando
  1193  04BF  0870               	movf	??_analizaComando,w
  1194  04C0  00B4               	movwf	_vel+2
  1195                           
  1196                           ;led_driver.c: 75: break;
  1197  04C1  0008               	return
  1198  04C2                     l1025:	
  1199                           ;led_driver.c: 76: case 113:
  1200                           
  1201                           
  1202                           ;led_driver.c: 77: vel[3]=comando[2];
  1203  04C2  083A               	movf	_comando+2,w
  1204  04C3  00F0               	movwf	??_analizaComando
  1205  04C4  0870               	movf	??_analizaComando,w
  1206  04C5  00B5               	movwf	_vel+3
  1207                           
  1208                           ;led_driver.c: 78: break;
  1209  04C6  0008               	return
  1210  04C7                     l1027:	
  1211                           ;led_driver.c: 79: case 114:
  1212                           
  1213                           
  1214                           ;led_driver.c: 80: vel[4]=comando[2];
  1215  04C7  083A               	movf	_comando+2,w
  1216  04C8  00F0               	movwf	??_analizaComando
  1217  04C9  0870               	movf	??_analizaComando,w
  1218  04CA  00B6               	movwf	_vel+4
  1219                           
  1220                           ;led_driver.c: 81: break;
  1221  04CB  0008               	return
  1222  04CC                     l1029:	
  1223                           ;led_driver.c: 82: case 115:
  1224                           
  1225                           
  1226                           ;led_driver.c: 83: vel[5]=comando[2];
  1227  04CC  083A               	movf	_comando+2,w
  1228  04CD  00F0               	movwf	??_analizaComando
  1229  04CE  0870               	movf	??_analizaComando,w
  1230  04CF  00B7               	movwf	_vel+5
  1231                           
  1232                           ;led_driver.c: 84: break;
  1233  04D0  0008               	return
  1234  04D1                     l1031:	
  1235                           ;led_driver.c: 86: case 120:
  1236                           
  1237                           
  1238                           ;led_driver.c: 87: vel[0]=0;
  1239  04D1  01B2               	clrf	_vel
  1240                           
  1241                           ;led_driver.c: 88: vel[1]=0;
  1242  04D2  01B3               	clrf	_vel+1
  1243                           
  1244                           ;led_driver.c: 89: vel[2]=0;
  1245  04D3  01B4               	clrf	_vel+2
  1246                           
  1247                           ;led_driver.c: 90: vel[3]=0;
  1248  04D4  01B5               	clrf	_vel+3
  1249                           
  1250                           ;led_driver.c: 91: vel[4]=0;
  1251  04D5  01B6               	clrf	_vel+4
  1252                           
  1253                           ;led_driver.c: 92: vel[5]=0;
  1254  04D6  01B7               	clrf	_vel+5
  1255                           
  1256                           ;led_driver.c: 93: refbrillo[0]=0;
  1257  04D7  01AC               	clrf	_refbrillo
  1258                           
  1259                           ;led_driver.c: 94: refbrillo[1]=0;
  1260  04D8  01AD               	clrf	_refbrillo+1
  1261                           
  1262                           ;led_driver.c: 95: refbrillo[2]=0;
  1263  04D9  01AE               	clrf	_refbrillo+2
  1264                           
  1265                           ;led_driver.c: 96: refbrillo[3]=0;
  1266  04DA  01AF               	clrf	_refbrillo+3
  1267                           
  1268                           ;led_driver.c: 97: refbrillo[4]=0;
  1269  04DB  01B0               	clrf	_refbrillo+4
  1270                           
  1271                           ;led_driver.c: 98: refbrillo[5]=0;
  1272  04DC  01B1               	clrf	_refbrillo+5
  1273                           
  1274                           ;led_driver.c: 99: brillo[0]=0;
  1275  04DD  01A0               	clrf	_brillo
  1276                           
  1277                           ;led_driver.c: 100: brillo[1]=0;
  1278  04DE  01A1               	clrf	_brillo+1
  1279                           
  1280                           ;led_driver.c: 101: brillo[2]=0;
  1281  04DF  01A2               	clrf	_brillo+2
  1282                           
  1283                           ;led_driver.c: 102: brillo[3]=0;
  1284  04E0  01A3               	clrf	_brillo+3
  1285                           
  1286                           ;led_driver.c: 103: brillo[4]=0;
  1287  04E1  01A4               	clrf	_brillo+4
  1288                           
  1289                           ;led_driver.c: 104: brillo[5]=0;
  1290  04E2  01A5               	clrf	_brillo+5
  1291                           
  1292                           ;led_driver.c: 111: }
  1293                           
  1294                           ;led_driver.c: 108: break;
  1295                           
  1296                           ;led_driver.c: 107: default:
  1297                           
  1298                           ;led_driver.c: 105: break;
  1299  04E3  0008               	return
  1300  04E4                     l1035:	
  1301  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1302  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1303  04E6  0839               	movf	_comando+1,w
  1304                           
  1305                           ; Switch size 1, requested type "space"
  1306                           ; Number of cases is 13, Range of values is 100 to 120
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; direct_byte           30     9 (fixed)
  1310                           ; simple_byte           40    21 (average)
  1311                           ; jumptable            263     9 (fixed)
  1312                           ;	Chosen strategy is direct_byte
  1313  04E7  3E9C               	addlw	-100
  1314  04E8  1C03               	skipc
  1315  04E9  0008               	return
  1316  04EA  0084               	movwf	4
  1317  04EB  3015               	movlw	21
  1318  04EC  0204               	subwf	4,w
  1319  04ED  1803               	skipnc
  1320  04EE  0008               	return
  1321  04EF  3000               	movlw	high S1307
  1322  04F0  008A               	movwf	10
  1323  04F1  3001               	movlw	low S1307
  1324  04F2  0704               	addwf	4,w
  1325  04F3  0082               	movwf	2
  1326  04F4                     l116:	
  1327                           ;led_driver.c: 113: return;
  1328                           
  1329  04F4  0008               	return
  1330  04F5                     __end_of_analizaComando:	
  1331                           
  1332                           	psect	swtext1
  1333  0001                     __pswtext1:	
  1334  0001                     S1307:	
  1335  0001  2C93               	ljmp	l1007
  1336  0002  2C9A               	ljmp	l1009
  1337  0003  2C9F               	ljmp	l1011
  1338  0004  2CA4               	ljmp	l1013
  1339  0005  2CA9               	ljmp	l1015
  1340  0006  2CAE               	ljmp	l1017
  1341  0007  2CF4               	ljmp	l116
  1342  0008  2CF4               	ljmp	l116
  1343  0009  2CF4               	ljmp	l116
  1344  000A  2CF4               	ljmp	l116
  1345  000B  2CB3               	ljmp	l1019
  1346  000C  2CB8               	ljmp	l1021
  1347  000D  2CBD               	ljmp	l1023
  1348  000E  2CC2               	ljmp	l1025
  1349  000F  2CC7               	ljmp	l1027
  1350  0010  2CCC               	ljmp	l1029
  1351  0011  2CF4               	ljmp	l116
  1352  0012  2CF4               	ljmp	l116
  1353  0013  2CF4               	ljmp	l116
  1354  0014  2CF4               	ljmp	l116
  1355  0015  2CD1               	ljmp	l1031
  1356                           
  1357                           	psect	text4
  1358  0444                     __ptext4:	
  1359 ;; *************** function _UART_Read *****************
  1360 ;; Defined at:
  1361 ;;		line 72 in file "uart.h"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      unsigned char 
  1368 ;; Registers used:
  1369 ;;		wreg
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1375 ;;      Params:         0       0       0       0
  1376 ;;      Locals:         0       0       0       0
  1377 ;;      Temps:          0       0       0       0
  1378 ;;      Totals:         0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_serial_isr
  1385 ;;		_UART_Read_Text
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _UART_Read
  1391  0444                     _UART_Read:	
  1392  0444                     l74:	
  1393                           ;uart.h: 73: while(!RCIF);
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _UART_Read: [wreg]
  1397                           
  1398  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0446  1E8C               	btfss	12,5	;volatile
  1401  0447  2C44               	goto	l74
  1402                           
  1403                           ;uart.h: 74: return RCREG;
  1404  0448  081A               	movf	26,w	;volatile
  1405  0449  0008               	return
  1406  044A                     __end_of_UART_Read:	
  1407                           
  1408                           	psect	text5
  1409  043E                     __ptext5:	
  1410 ;; *************** function _UART_Data_Ready *****************
  1411 ;; Defined at:
  1412 ;;		line 67 in file "uart.h"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      unsigned char 
  1419 ;; Registers used:
  1420 ;;		wreg
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1426 ;;      Params:         0       0       0       0
  1427 ;;      Locals:         0       0       0       0
  1428 ;;      Temps:          0       0       0       0
  1429 ;;      Totals:         0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_serial_isr
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _UART_Data_Ready
  1441  043E                     _UART_Data_Ready:	
  1442                           
  1443                           ;uart.h: 68: return RCIF;
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _UART_Data_Ready: [wreg]
  1447  043E  3000               	movlw	0
  1448  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0441  1A8C               	btfsc	12,5	;volatile
  1451  0442  3001               	movlw	1
  1452  0443  0008               	return
  1453  0444                     __end_of_UART_Data_Ready:	
  1454                           
  1455                           	psect	text6
  1456  0584                     __ptext6:	
  1457 ;; *************** function _UART_Init *****************
  1458 ;; Defined at:
  1459 ;;		line 23 in file "uart.h"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  baudrate        4    6[BANK0 ] const long 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  x               2    9[COMMON] unsigned int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      unsigned char 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1473 ;;      Params:         0       4       0       0
  1474 ;;      Locals:         2       0       0       0
  1475 ;;      Temps:          0      12       0       0
  1476 ;;      Totals:         2      16       0       0
  1477 ;;Total ram usage:       18 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    1
  1480 ;; This function calls:
  1481 ;;		___aldiv
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;;		_test
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _UART_Init
  1490  0584                     _UART_Init:	
  1491                           
  1492                           ;uart.h: 24: unsigned int x;
  1493                           ;uart.h: 25: x = ((4000000L) - baudrate*64)/(baudrate*64);
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1497  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0586  0843               	movf	UART_Init@baudrate,w
  1500  0587  00C7               	movwf	??_UART_Init
  1501  0588  0844               	movf	UART_Init@baudrate+1,w
  1502  0589  00C8               	movwf	??_UART_Init+1
  1503  058A  0845               	movf	UART_Init@baudrate+2,w
  1504  058B  00C9               	movwf	??_UART_Init+2
  1505  058C  0846               	movf	UART_Init@baudrate+3,w
  1506  058D  00CA               	movwf	??_UART_Init+3
  1507  058E  3006               	movlw	6
  1508  058F                     u655:	
  1509  058F  1003               	clrc
  1510  0590  0DC7               	rlf	??_UART_Init,f
  1511  0591  0DC8               	rlf	??_UART_Init+1,f
  1512  0592  0DC9               	rlf	??_UART_Init+2,f
  1513  0593  0DCA               	rlf	??_UART_Init+3,f
  1514  0594  3EFF               	addlw	-1
  1515  0595  1D03               	skipz
  1516  0596  2D8F               	goto	u655
  1517  0597  084A               	movf	??_UART_Init+3,w
  1518  0598  00F3               	movwf	?___aldiv+3
  1519  0599  0849               	movf	??_UART_Init+2,w
  1520  059A  00F2               	movwf	?___aldiv+2
  1521  059B  0848               	movf	??_UART_Init+1,w
  1522  059C  00F1               	movwf	?___aldiv+1
  1523  059D  0847               	movf	??_UART_Init,w
  1524  059E  00F0               	movwf	?___aldiv
  1525  059F  3000               	movlw	0
  1526  05A0  00CB               	movwf	??_UART_Init+4
  1527  05A1  3009               	movlw	9
  1528  05A2  00CC               	movwf	??_UART_Init+5
  1529  05A3  303D               	movlw	61
  1530  05A4  00CD               	movwf	??_UART_Init+6
  1531  05A5  3000               	movlw	0
  1532  05A6  00CE               	movwf	??_UART_Init+7
  1533  05A7  0843               	movf	UART_Init@baudrate,w
  1534  05A8  00CF               	movwf	??_UART_Init+8
  1535  05A9  0844               	movf	UART_Init@baudrate+1,w
  1536  05AA  00D0               	movwf	??_UART_Init+9
  1537  05AB  0845               	movf	UART_Init@baudrate+2,w
  1538  05AC  00D1               	movwf	??_UART_Init+10
  1539  05AD  0846               	movf	UART_Init@baudrate+3,w
  1540  05AE  00D2               	movwf	??_UART_Init+11
  1541  05AF  3006               	movlw	6
  1542  05B0                     u665:	
  1543  05B0  1003               	clrc
  1544  05B1  0DCF               	rlf	??_UART_Init+8,f
  1545  05B2  0DD0               	rlf	??_UART_Init+9,f
  1546  05B3  0DD1               	rlf	??_UART_Init+10,f
  1547  05B4  0DD2               	rlf	??_UART_Init+11,f
  1548  05B5  3EFF               	addlw	-1
  1549  05B6  1D03               	skipz
  1550  05B7  2DB0               	goto	u665
  1551  05B8  09CF               	comf	??_UART_Init+8,f
  1552  05B9  09D0               	comf	??_UART_Init+9,f
  1553  05BA  09D1               	comf	??_UART_Init+10,f
  1554  05BB  09D2               	comf	??_UART_Init+11,f
  1555  05BC  0ACF               	incf	??_UART_Init+8,f
  1556  05BD  1903               	skipnz
  1557  05BE  0AD0               	incf	??_UART_Init+9,f
  1558  05BF  1903               	skipnz
  1559  05C0  0AD1               	incf	??_UART_Init+10,f
  1560  05C1  1903               	skipnz
  1561  05C2  0AD2               	incf	??_UART_Init+11,f
  1562  05C3  084F               	movf	??_UART_Init+8,w
  1563  05C4  07CB               	addwf	??_UART_Init+4,f
  1564  05C5  0850               	movf	??_UART_Init+9,w
  1565  05C6  1803               	skipnc
  1566  05C7  0F50               	incfsz	??_UART_Init+9,w
  1567  05C8  2DCA               	goto	u670
  1568  05C9  2DCB               	goto	u671
  1569  05CA                     u670:	
  1570  05CA  07CC               	addwf	??_UART_Init+5,f
  1571  05CB                     u671:	
  1572  05CB  0851               	movf	??_UART_Init+10,w
  1573  05CC  1803               	skipnc
  1574  05CD  0F51               	incfsz	??_UART_Init+10,w
  1575  05CE  2DD0               	goto	u672
  1576  05CF  2DD1               	goto	u673
  1577  05D0                     u672:	
  1578  05D0  07CD               	addwf	??_UART_Init+6,f
  1579  05D1                     u673:	
  1580  05D1  0852               	movf	??_UART_Init+11,w
  1581  05D2  1803               	skipnc
  1582  05D3  0A52               	incf	??_UART_Init+11,w
  1583  05D4  07CE               	addwf	??_UART_Init+7,f
  1584  05D5  084E               	movf	??_UART_Init+7,w
  1585  05D6  00F7               	movwf	?___aldiv+7
  1586  05D7  084D               	movf	??_UART_Init+6,w
  1587  05D8  00F6               	movwf	?___aldiv+6
  1588  05D9  084C               	movf	??_UART_Init+5,w
  1589  05DA  00F5               	movwf	?___aldiv+5
  1590  05DB  084B               	movf	??_UART_Init+4,w
  1591  05DC  00F4               	movwf	?___aldiv+4
  1592  05DD  24F5               	fcall	___aldiv
  1593  05DE  0871               	movf	?___aldiv+1,w
  1594  05DF  01FA               	clrf	UART_Init@x+1
  1595  05E0  07FA               	addwf	UART_Init@x+1,f
  1596  05E1  0870               	movf	?___aldiv,w
  1597  05E2  01F9               	clrf	UART_Init@x
  1598  05E3  07F9               	addwf	UART_Init@x,f
  1599                           
  1600                           ;uart.h: 26: if(x>255)
  1601  05E4  3001               	movlw	1
  1602  05E5  027A               	subwf	UART_Init@x+1,w
  1603  05E6  3000               	movlw	0
  1604  05E7  1903               	skipnz
  1605  05E8  0279               	subwf	UART_Init@x,w
  1606  05E9  1C03               	skipc
  1607  05EA  2E4E               	goto	l1105
  1608                           
  1609                           ;uart.h: 27: {
  1610                           ;uart.h: 28: x = ((4000000L) - baudrate*16)/(baudrate*16);
  1611  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1612  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1613  05ED  0843               	movf	UART_Init@baudrate,w
  1614  05EE  00C7               	movwf	??_UART_Init
  1615  05EF  0844               	movf	UART_Init@baudrate+1,w
  1616  05F0  00C8               	movwf	??_UART_Init+1
  1617  05F1  0845               	movf	UART_Init@baudrate+2,w
  1618  05F2  00C9               	movwf	??_UART_Init+2
  1619  05F3  0846               	movf	UART_Init@baudrate+3,w
  1620  05F4  00CA               	movwf	??_UART_Init+3
  1621  05F5  3004               	movlw	4
  1622  05F6                     u695:	
  1623  05F6  1003               	clrc
  1624  05F7  0DC7               	rlf	??_UART_Init,f
  1625  05F8  0DC8               	rlf	??_UART_Init+1,f
  1626  05F9  0DC9               	rlf	??_UART_Init+2,f
  1627  05FA  0DCA               	rlf	??_UART_Init+3,f
  1628  05FB  3EFF               	addlw	-1
  1629  05FC  1D03               	skipz
  1630  05FD  2DF6               	goto	u695
  1631  05FE  084A               	movf	??_UART_Init+3,w
  1632  05FF  00F3               	movwf	?___aldiv+3
  1633  0600  0849               	movf	??_UART_Init+2,w
  1634  0601  00F2               	movwf	?___aldiv+2
  1635  0602  0848               	movf	??_UART_Init+1,w
  1636  0603  00F1               	movwf	?___aldiv+1
  1637  0604  0847               	movf	??_UART_Init,w
  1638  0605  00F0               	movwf	?___aldiv
  1639  0606  3000               	movlw	0
  1640  0607  00CB               	movwf	??_UART_Init+4
  1641  0608  3009               	movlw	9
  1642  0609  00CC               	movwf	??_UART_Init+5
  1643  060A  303D               	movlw	61
  1644  060B  00CD               	movwf	??_UART_Init+6
  1645  060C  3000               	movlw	0
  1646  060D  00CE               	movwf	??_UART_Init+7
  1647  060E  0843               	movf	UART_Init@baudrate,w
  1648  060F  00CF               	movwf	??_UART_Init+8
  1649  0610  0844               	movf	UART_Init@baudrate+1,w
  1650  0611  00D0               	movwf	??_UART_Init+9
  1651  0612  0845               	movf	UART_Init@baudrate+2,w
  1652  0613  00D1               	movwf	??_UART_Init+10
  1653  0614  0846               	movf	UART_Init@baudrate+3,w
  1654  0615  00D2               	movwf	??_UART_Init+11
  1655  0616  3004               	movlw	4
  1656  0617                     u705:	
  1657  0617  1003               	clrc
  1658  0618  0DCF               	rlf	??_UART_Init+8,f
  1659  0619  0DD0               	rlf	??_UART_Init+9,f
  1660  061A  0DD1               	rlf	??_UART_Init+10,f
  1661  061B  0DD2               	rlf	??_UART_Init+11,f
  1662  061C  3EFF               	addlw	-1
  1663  061D  1D03               	skipz
  1664  061E  2E17               	goto	u705
  1665  061F  09CF               	comf	??_UART_Init+8,f
  1666  0620  09D0               	comf	??_UART_Init+9,f
  1667  0621  09D1               	comf	??_UART_Init+10,f
  1668  0622  09D2               	comf	??_UART_Init+11,f
  1669  0623  0ACF               	incf	??_UART_Init+8,f
  1670  0624  1903               	skipnz
  1671  0625  0AD0               	incf	??_UART_Init+9,f
  1672  0626  1903               	skipnz
  1673  0627  0AD1               	incf	??_UART_Init+10,f
  1674  0628  1903               	skipnz
  1675  0629  0AD2               	incf	??_UART_Init+11,f
  1676  062A  084F               	movf	??_UART_Init+8,w
  1677  062B  07CB               	addwf	??_UART_Init+4,f
  1678  062C  0850               	movf	??_UART_Init+9,w
  1679  062D  1803               	skipnc
  1680  062E  0F50               	incfsz	??_UART_Init+9,w
  1681  062F  2E31               	goto	u710
  1682  0630  2E32               	goto	u711
  1683  0631                     u710:	
  1684  0631  07CC               	addwf	??_UART_Init+5,f
  1685  0632                     u711:	
  1686  0632  0851               	movf	??_UART_Init+10,w
  1687  0633  1803               	skipnc
  1688  0634  0F51               	incfsz	??_UART_Init+10,w
  1689  0635  2E37               	goto	u712
  1690  0636  2E38               	goto	u713
  1691  0637                     u712:	
  1692  0637  07CD               	addwf	??_UART_Init+6,f
  1693  0638                     u713:	
  1694  0638  0852               	movf	??_UART_Init+11,w
  1695  0639  1803               	skipnc
  1696  063A  0A52               	incf	??_UART_Init+11,w
  1697  063B  07CE               	addwf	??_UART_Init+7,f
  1698  063C  084E               	movf	??_UART_Init+7,w
  1699  063D  00F7               	movwf	?___aldiv+7
  1700  063E  084D               	movf	??_UART_Init+6,w
  1701  063F  00F6               	movwf	?___aldiv+6
  1702  0640  084C               	movf	??_UART_Init+5,w
  1703  0641  00F5               	movwf	?___aldiv+5
  1704  0642  084B               	movf	??_UART_Init+4,w
  1705  0643  00F4               	movwf	?___aldiv+4
  1706  0644  24F5               	fcall	___aldiv
  1707  0645  0871               	movf	?___aldiv+1,w
  1708  0646  01FA               	clrf	UART_Init@x+1
  1709  0647  07FA               	addwf	UART_Init@x+1,f
  1710  0648  0870               	movf	?___aldiv,w
  1711  0649  01F9               	clrf	UART_Init@x
  1712  064A  07F9               	addwf	UART_Init@x,f
  1713                           
  1714                           ;uart.h: 29: BRGH = 1;
  1715  064B  1683               	bsf	3,5	;RP0=1, select bank1
  1716  064C  1303               	bcf	3,6	;RP1=0, select bank1
  1717  064D  1518               	bsf	24,2	;volatile
  1718  064E                     l1105:	
  1719                           
  1720                           ;uart.h: 30: }
  1721                           ;uart.h: 31: if(x<256)
  1722  064E  3001               	movlw	1
  1723  064F  027A               	subwf	UART_Init@x+1,w
  1724  0650  3000               	movlw	0
  1725  0651  1903               	skipnz
  1726  0652  0279               	subwf	UART_Init@x,w
  1727  0653  1803               	skipnc
  1728  0654  0008               	return
  1729                           
  1730                           ;uart.h: 32: {
  1731                           ;uart.h: 33: SPBRG = x;
  1732  0655  0879               	movf	UART_Init@x,w
  1733  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1735  0658  0099               	movwf	25	;volatile
  1736                           
  1737                           ;uart.h: 34: SYNC = 0;
  1738  0659  1218               	bcf	24,4	;volatile
  1739                           
  1740                           ;uart.h: 35: SPEN = 1;
  1741  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1742  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1743  065C  1798               	bsf	24,7	;volatile
  1744                           
  1745                           ;uart.h: 37: TRISB1 = 1;
  1746  065D  1683               	bsf	3,5	;RP0=1, select bank1
  1747  065E  1303               	bcf	3,6	;RP1=0, select bank1
  1748  065F  1486               	bsf	6,1	;volatile
  1749                           
  1750                           ;uart.h: 38: TRISB2 = 1;
  1751  0660  1506               	bsf	6,2	;volatile
  1752                           
  1753                           ;uart.h: 39: CREN = 1;
  1754  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0663  1618               	bsf	24,4	;volatile
  1757                           
  1758                           ;uart.h: 40: TXEN = 1;
  1759  0664  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0665  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0666  1698               	bsf	24,5	;volatile
  1762                           
  1763                           ;uart.h: 41: return 1;
  1764                           ;	Return value of _UART_Init is never used
  1765  0667  0008               	return
  1766  0668                     __end_of_UART_Init:	
  1767                           ;uart.h: 42: }
  1768                           ;uart.h: 43: return 0;
  1769                           ;	Return value of _UART_Init is never used
  1770                           
  1771                           
  1772                           	psect	text7
  1773  04F5                     __ptext7:	
  1774 ;; *************** function ___aldiv *****************
  1775 ;; Defined at:
  1776 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\aldiv.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  divisor         4    0[COMMON] long 
  1779 ;;  dividend        4    4[COMMON] long 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  quotient        4    2[BANK0 ] long 
  1782 ;;  sign            1    1[BANK0 ] unsigned char 
  1783 ;;  counter         1    0[BANK0 ] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  4    0[COMMON] long 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1793 ;;      Params:         8       0       0       0
  1794 ;;      Locals:         0       6       0       0
  1795 ;;      Temps:          1       0       0       0
  1796 ;;      Totals:         9       6       0       0
  1797 ;;Total ram usage:       15 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_UART_Init
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function ___aldiv
  1808  04F5                     ___aldiv:	
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1812  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1813  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1814  04F7  01BE               	clrf	___aldiv@sign
  1815  04F8  1FF3               	btfss	___aldiv@divisor+3,7
  1816  04F9  2D07               	goto	l285
  1817  04FA  09F0               	comf	___aldiv@divisor,f
  1818  04FB  09F1               	comf	___aldiv@divisor+1,f
  1819  04FC  09F2               	comf	___aldiv@divisor+2,f
  1820  04FD  09F3               	comf	___aldiv@divisor+3,f
  1821  04FE  0AF0               	incf	___aldiv@divisor,f
  1822  04FF  1903               	skipnz
  1823  0500  0AF1               	incf	___aldiv@divisor+1,f
  1824  0501  1903               	skipnz
  1825  0502  0AF2               	incf	___aldiv@divisor+2,f
  1826  0503  1903               	skipnz
  1827  0504  0AF3               	incf	___aldiv@divisor+3,f
  1828  0505  01BE               	clrf	___aldiv@sign
  1829  0506  0ABE               	incf	___aldiv@sign,f
  1830  0507                     l285:	
  1831  0507  1FF7               	btfss	___aldiv@dividend+3,7
  1832  0508  2D18               	goto	l1067
  1833  0509  09F4               	comf	___aldiv@dividend,f
  1834  050A  09F5               	comf	___aldiv@dividend+1,f
  1835  050B  09F6               	comf	___aldiv@dividend+2,f
  1836  050C  09F7               	comf	___aldiv@dividend+3,f
  1837  050D  0AF4               	incf	___aldiv@dividend,f
  1838  050E  1903               	skipnz
  1839  050F  0AF5               	incf	___aldiv@dividend+1,f
  1840  0510  1903               	skipnz
  1841  0511  0AF6               	incf	___aldiv@dividend+2,f
  1842  0512  1903               	skipnz
  1843  0513  0AF7               	incf	___aldiv@dividend+3,f
  1844  0514  3001               	movlw	1
  1845  0515  00F8               	movwf	??___aldiv
  1846  0516  0878               	movf	??___aldiv,w
  1847  0517  06BE               	xorwf	___aldiv@sign,f
  1848  0518                     l1067:	
  1849  0518  3000               	movlw	0
  1850  0519  00C2               	movwf	___aldiv@quotient+3
  1851  051A  3000               	movlw	0
  1852  051B  00C1               	movwf	___aldiv@quotient+2
  1853  051C  3000               	movlw	0
  1854  051D  00C0               	movwf	___aldiv@quotient+1
  1855  051E  3000               	movlw	0
  1856  051F  00BF               	movwf	___aldiv@quotient
  1857  0520  0873               	movf	___aldiv@divisor+3,w
  1858  0521  0472               	iorwf	___aldiv@divisor+2,w
  1859  0522  0471               	iorwf	___aldiv@divisor+1,w
  1860  0523  0470               	iorwf	___aldiv@divisor,w
  1861  0524  1903               	skipnz
  1862  0525  2D6D               	goto	l1089
  1863  0526  01BD               	clrf	___aldiv@counter
  1864  0527  0ABD               	incf	___aldiv@counter,f
  1865  0528                     l1075:	
  1866  0528  1BF3               	btfsc	___aldiv@divisor+3,7
  1867  0529  2D38               	goto	l1077
  1868  052A  3001               	movlw	1
  1869  052B  00F8               	movwf	??___aldiv
  1870  052C                     u585:	
  1871  052C  1003               	clrc
  1872  052D  0DF0               	rlf	___aldiv@divisor,f
  1873  052E  0DF1               	rlf	___aldiv@divisor+1,f
  1874  052F  0DF2               	rlf	___aldiv@divisor+2,f
  1875  0530  0DF3               	rlf	___aldiv@divisor+3,f
  1876  0531  0BF8               	decfsz	??___aldiv,f
  1877  0532  2D2C               	goto	u585
  1878  0533  3001               	movlw	1
  1879  0534  00F8               	movwf	??___aldiv
  1880  0535  0878               	movf	??___aldiv,w
  1881  0536  07BD               	addwf	___aldiv@counter,f
  1882  0537  2D28               	goto	l1075
  1883  0538                     l1077:	
  1884  0538  3001               	movlw	1
  1885  0539  00F8               	movwf	??___aldiv
  1886  053A                     u605:	
  1887  053A  1003               	clrc
  1888  053B  0DBF               	rlf	___aldiv@quotient,f
  1889  053C  0DC0               	rlf	___aldiv@quotient+1,f
  1890  053D  0DC1               	rlf	___aldiv@quotient+2,f
  1891  053E  0DC2               	rlf	___aldiv@quotient+3,f
  1892  053F  0BF8               	decfsz	??___aldiv,f
  1893  0540  2D3A               	goto	u605
  1894  0541  0873               	movf	___aldiv@divisor+3,w
  1895  0542  0277               	subwf	___aldiv@dividend+3,w
  1896  0543  1D03               	skipz
  1897  0544  2D4F               	goto	u615
  1898  0545  0872               	movf	___aldiv@divisor+2,w
  1899  0546  0276               	subwf	___aldiv@dividend+2,w
  1900  0547  1D03               	skipz
  1901  0548  2D4F               	goto	u615
  1902  0549  0871               	movf	___aldiv@divisor+1,w
  1903  054A  0275               	subwf	___aldiv@dividend+1,w
  1904  054B  1D03               	skipz
  1905  054C  2D4F               	goto	u615
  1906  054D  0870               	movf	___aldiv@divisor,w
  1907  054E  0274               	subwf	___aldiv@dividend,w
  1908  054F                     u615:	
  1909  054F  1C03               	skipc
  1910  0550  2D60               	goto	l1085
  1911  0551  0870               	movf	___aldiv@divisor,w
  1912  0552  02F4               	subwf	___aldiv@dividend,f
  1913  0553  0871               	movf	___aldiv@divisor+1,w
  1914  0554  1C03               	skipc
  1915  0555  0F71               	incfsz	___aldiv@divisor+1,w
  1916  0556  02F5               	subwf	___aldiv@dividend+1,f
  1917  0557  0872               	movf	___aldiv@divisor+2,w
  1918  0558  1C03               	skipc
  1919  0559  0F72               	incfsz	___aldiv@divisor+2,w
  1920  055A  02F6               	subwf	___aldiv@dividend+2,f
  1921  055B  0873               	movf	___aldiv@divisor+3,w
  1922  055C  1C03               	skipc
  1923  055D  0F73               	incfsz	___aldiv@divisor+3,w
  1924  055E  02F7               	subwf	___aldiv@dividend+3,f
  1925  055F  143F               	bsf	___aldiv@quotient,0
  1926  0560                     l1085:	
  1927  0560  3001               	movlw	1
  1928  0561                     u625:	
  1929  0561  1003               	clrc
  1930  0562  0CF3               	rrf	___aldiv@divisor+3,f
  1931  0563  0CF2               	rrf	___aldiv@divisor+2,f
  1932  0564  0CF1               	rrf	___aldiv@divisor+1,f
  1933  0565  0CF0               	rrf	___aldiv@divisor,f
  1934  0566  3EFF               	addlw	-1
  1935  0567  1D03               	skipz
  1936  0568  2D61               	goto	u625
  1937  0569  3001               	movlw	1
  1938  056A  02BD               	subwf	___aldiv@counter,f
  1939  056B  1D03               	btfss	3,2
  1940  056C  2D38               	goto	l1077
  1941  056D                     l1089:	
  1942  056D  083E               	movf	___aldiv@sign,w
  1943  056E  1903               	btfsc	3,2
  1944  056F  2D7B               	goto	l1093
  1945  0570  09BF               	comf	___aldiv@quotient,f
  1946  0571  09C0               	comf	___aldiv@quotient+1,f
  1947  0572  09C1               	comf	___aldiv@quotient+2,f
  1948  0573  09C2               	comf	___aldiv@quotient+3,f
  1949  0574  0ABF               	incf	___aldiv@quotient,f
  1950  0575  1903               	skipnz
  1951  0576  0AC0               	incf	___aldiv@quotient+1,f
  1952  0577  1903               	skipnz
  1953  0578  0AC1               	incf	___aldiv@quotient+2,f
  1954  0579  1903               	skipnz
  1955  057A  0AC2               	incf	___aldiv@quotient+3,f
  1956  057B                     l1093:	
  1957  057B  0842               	movf	___aldiv@quotient+3,w
  1958  057C  00F3               	movwf	?___aldiv+3
  1959  057D  0841               	movf	___aldiv@quotient+2,w
  1960  057E  00F2               	movwf	?___aldiv+2
  1961  057F  0840               	movf	___aldiv@quotient+1,w
  1962  0580  00F1               	movwf	?___aldiv+1
  1963  0581  083F               	movf	___aldiv@quotient,w
  1964  0582  00F0               	movwf	?___aldiv
  1965  0583  0008               	return
  1966  0584                     __end_of___aldiv:	
  1967  007E                     btemp	set	126	;btemp
  1968  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      53
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    ?___aldiv	long  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_UART_Init
    _serial_isr->_analizaComando
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1057
                                             11 COMMON     3     3      0
                                             22 BANK0      2     2      0
                          _UART_Init
                         _serial_isr
                          _apagatodo
 ---------------------------------------------------------------------------------
 (1) _apagatodo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_isr                                           1     1      0       0
                                              1 COMMON     1     1      0
                    _UART_Data_Ready
                          _UART_Read
                     _analizaComando
 ---------------------------------------------------------------------------------
 (2) _analizaComando                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     456
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     300
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _serial_isr
     _UART_Data_Ready
     _UART_Read
     _analizaComando
   _apagatodo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       2       2        0.0%
BANK0               50     18      35       3       66.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      45      10        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jan 29 20:07:59 2016

                       pc 0002                        l74 0444                        fsr 0004  
                     l116 04F4                       l153 07C2                       l285 0507  
                     _GIE 005F                       _RB0 0030                       _RB3 0033  
                     _RB4 0034                       _RB5 0035                       _RB6 0036  
                     _RB7 0037              __CFG_CPD$OFF 0000                       u605 053A  
                     u710 0631                       u615 054F                       u711 0632  
                     u712 0637                       u625 0561                       u713 0638  
                     u705 0617                       u670 05CA                       u671 05CB  
                     u655 058F                       u672 05D0                       u585 052C  
                     u673 05D1                       u665 05B0                       u905 0784  
                     u915 078F                       u925 07A3                       u695 05F6  
                     u935 07B2                       u855 074B                       u775 0677  
                     u865 0758                       u785 069B                       u875 0763  
                     u885 076E                       u895 0779                       u997 06A3  
 __size_of_analizaComando 0063                       _aux 003B                       _vel 0032  
                     fsr0 0004                       indf 0000              __CFG_FOSC$LP 0000  
                    S1307 0001              __CFG_LVP$OFF 0000                      l1011 049F  
                    l1021 04B8                      l1013 04A4                      l1031 04D1  
                    l1023 04BD                      l1015 04A9                      l1007 0493  
                    l1105 064E                      l1025 04C2                      l1017 04AE  
                    l1009 049A                      l1027 04C7                      l1019 04B3  
                    l1035 04E4                      l1029 04CC                      l1205 072B  
                    l1145 0484                      l1137 0477                      l1075 0528  
                    l1067 0518                      l1093 057B                      l1085 0560  
                    l1077 0538                      l1237 074D                      l1165 069D  
                    l1159 0679                      l1089 056D                      l1281 07F2  
                    l1265 07A5                      l1283 07F9                      _BRGH 04C2  
                    _CREN 00C4                      u1007 06B4                      u1017 06C5  
                    u1027 06D6                      u1037 06E7                      u1047 06F8  
                    u1057 0709                      u1067 0717                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4                      _main 0668                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0000           __end_of___aldiv 0584  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _RCREG 001A  
                   _SPBRG 0099                     _TRISB 0086                     _TXREG 0019  
           __CFG_PWRTE$ON 0000             _indiceComando 003C        __size_of_UART_Init 00E4  
      __size_of_UART_Read 0006                     main@i 0053                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 044A              __end_of_main 0800                    ??_main 007B  
                  _TRISB1 0431                    _TRISB2 0432                    _TRISB4 0434  
                  _TRISB5 0435         __end_of_UART_Init 0668         __end_of_UART_Read 044A  
               ??___aldiv 0078                    _brillo 0020                    _espera 0026  
          _analizaComando 0492   __end_of__initialization 044F            __pcstackCOMMON 0070  
  __end_of_analizaComando 04F5        __size_of_apagatodo 0009                __pbssBANK0 0020  
__size_of_UART_Data_Ready 0006                __pmaintext 0668           ?_analizaComando 0070  
       __end_of_apagatodo 0462                   ___aldiv 04F5                   __ptext0 0000  
                 __ptext1 0459                   __ptext2 0462                   __ptext3 0492  
                 __ptext4 0444                   __ptext5 043E                   __ptext6 0584  
                 __ptext7 04F5                   _comando 0038          ___aldiv@dividend 0074  
                 clrloop0 0452      end_of_initialization 044F                _serial_isr 0462  
        ___aldiv@quotient 003F         ??_UART_Data_Ready 0070                 _UART_Init 0584  
               _UART_Read 0444                ?_UART_Init 0043                ?_UART_Read 0070  
     start_initialization 044A          ??_analizaComando 0070               ?_serial_isr 0070  
           __pcstackBANK0 003D                 _apagatodo 0459                  ?___aldiv 0070  
             ??_UART_Init 0047               ??_UART_Read 0070                 __pswtext1 0001  
     __size_of_serial_isr 0030                UART_Init@x 0079           ___aldiv@divisor 0070  
               _refbrillo 002C           ___aldiv@counter 003D           _UART_Data_Ready 043E  
               clear_ram0 0451                ?_apagatodo 0070         UART_Init@baudrate 0043  
        __size_of___aldiv 008F   __end_of_UART_Data_Ready 0444             __size_of_main 0198  
             ??_apagatodo 0070              ??_serial_isr 0071                _INTCONbits 000B  
      __end_of_serial_isr 0492              ___aldiv@sign 003E          ?_UART_Data_Ready 0070  
